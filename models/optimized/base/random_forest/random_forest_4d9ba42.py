def add_vectors(v1, v2):
    return [sum(i) for i in zip(v1, v2)]
def mul_vector_number(v1, num):
    return [i * num for i in v1]
def score(input):
    if (input[27]) <= (15.24507999420166):
        if (input[26]) <= (2.1942859888076782):
            if (input[20]) <= (1.2976571321487427):
                if (input[95]) <= (0.1520317941904068):
                    var0 = [1.0, 0.0, 0.0, 0.0]
                else:
                    if (input[94]) <= (-1.3053435683250427):
                        if (input[92]) <= (10.202889919281006):
                            var0 = [1.0, 0.0, 0.0, 0.0]
                        else:
                            var0 = [0.0, 0.0, 1.0, 0.0]
                    else:
                        var0 = [1.0, 0.0, 0.0, 0.0]
            else:
                if (input[87]) <= (10.178945064544678):
                    if (input[29]) <= (-84.52287483215332):
                        var0 = [1.0, 0.0, 0.0, 0.0]
                    else:
                        var0 = [0.0, 1.0, 0.0, 0.0]
                else:
                    var0 = [0.0, 0.0, 1.0, 0.0]
        else:
            if (input[15]) <= (2.359485924243927):
                var0 = [0.0, 0.0, 1.0, 0.0]
            else:
                var0 = [0.0, 1.0, 0.0, 0.0]
    else:
        var0 = [0.0, 0.0, 0.0, 1.0]
    if (input[63]) <= (-60.37786102294922):
        var1 = [0.0, 0.0, 0.0, 1.0]
    else:
        if (input[21]) <= (3.3339260816574097):
            if (input[40]) <= (-2.5175029635429382):
                var1 = [0.0, 1.0, 0.0, 0.0]
            else:
                if (input[15]) <= (-8.748413324356079):
                    var1 = [0.0, 0.0, 0.0, 1.0]
                else:
                    if (input[60]) <= (-8.350977420806885):
                        var1 = [0.0, 1.0, 0.0, 0.0]
                    else:
                        var1 = [1.0, 0.0, 0.0, 0.0]
        else:
            if (input[22]) <= (14.543574810028076):
                var1 = [0.0, 0.0, 1.0, 0.0]
            else:
                var1 = [0.0, 0.0, 0.0, 1.0]
    if (input[29]) <= (95.8587760925293):
        if (input[28]) <= (-0.18320614844560623):
            if (input[75]) <= (-0.14844050258398056):
                if (input[87]) <= (10.201694965362549):
                    if (input[104]) <= (28.4618319272995):
                        var2 = [0.0, 1.0, 0.0, 0.0]
                    else:
                        var2 = [1.0, 0.0, 0.0, 0.0]
                else:
                    var2 = [1.0, 0.0, 0.0, 0.0]
            else:
                if (input[25]) <= (4.320336878299713):
                    var2 = [1.0, 0.0, 0.0, 0.0]
                else:
                    var2 = [0.0, 1.0, 0.0, 0.0]
        else:
            if (input[28]) <= (3.664121985435486):
                if (input[77]) <= (10.10712480545044):
                    var2 = [0.0, 1.0, 0.0, 0.0]
                else:
                    if (input[46]) <= (0.7517795264720917):
                        var2 = [0.0, 0.0, 1.0, 0.0]
                    else:
                        var2 = [1.0, 0.0, 0.0, 0.0]
            else:
                var2 = [1.0, 0.0, 0.0, 0.0]
    else:
        var2 = [0.0, 0.0, 0.0, 1.0]
    if (input[41]) <= (-1.8878280520439148):
        if (input[30]) <= (7.596801996231079):
            if (input[14]) <= (11.961830377578735):
                var3 = [0.0, 0.0, 1.0, 0.0]
            else:
                var3 = [1.0, 0.0, 0.0, 0.0]
        else:
            var3 = [0.0, 0.0, 0.0, 1.0]
    else:
        if (input[35]) <= (-1.947683036327362):
            var3 = [0.0, 1.0, 0.0, 0.0]
        else:
            if (input[45]) <= (-5.023034930229187):
                var3 = [0.0, 1.0, 0.0, 0.0]
            else:
                if (input[11]) <= (2.882619023323059):
                    if (input[0]) <= (0.4357447028160095):
                        var3 = [1.0, 0.0, 0.0, 0.0]
                    else:
                        if (input[11]) <= (0.2753331884741783):
                            var3 = [1.0, 0.0, 0.0, 0.0]
                        else:
                            var3 = [0.0, 0.0, 1.0, 0.0]
                else:
                    var3 = [0.0, 0.0, 1.0, 0.0]
    return mul_vector_number(add_vectors(add_vectors(add_vectors(var0, var1), var2), var3), 0.25)
